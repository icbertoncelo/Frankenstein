/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AppIndexRouteImport } from './routes/_app/index'
import { Route as AppPathlessLayoutRouteImport } from './routes/_app/_pathlessLayout'
import { Route as AppNestedCommentsIndexRouteImport } from './routes/_app/nested-comments/index'
import { Route as AppEmployeeValidationIndexRouteImport } from './routes/_app/employee-validation/index'
import { Route as AppCryptoRankExchangeIndexRouteImport } from './routes/_app/crypto-rank-exchange/index'
import { Route as AppBlogPostIndexRouteImport } from './routes/_app/blog-post/index'

const AppIndexRoute = AppIndexRouteImport.update({
  id: '/_app/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppPathlessLayoutRoute = AppPathlessLayoutRouteImport.update({
  id: '/_app/_pathlessLayout',
  getParentRoute: () => rootRouteImport,
} as any)
const AppNestedCommentsIndexRoute = AppNestedCommentsIndexRouteImport.update({
  id: '/_app/nested-comments/',
  path: '/nested-comments/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppEmployeeValidationIndexRoute =
  AppEmployeeValidationIndexRouteImport.update({
    id: '/_app/employee-validation/',
    path: '/employee-validation/',
    getParentRoute: () => rootRouteImport,
  } as any)
const AppCryptoRankExchangeIndexRoute =
  AppCryptoRankExchangeIndexRouteImport.update({
    id: '/_app/crypto-rank-exchange/',
    path: '/crypto-rank-exchange/',
    getParentRoute: () => rootRouteImport,
  } as any)
const AppBlogPostIndexRoute = AppBlogPostIndexRouteImport.update({
  id: '/_app/blog-post/',
  path: '/blog-post/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof AppIndexRoute
  '/blog-post': typeof AppBlogPostIndexRoute
  '/crypto-rank-exchange': typeof AppCryptoRankExchangeIndexRoute
  '/employee-validation': typeof AppEmployeeValidationIndexRoute
  '/nested-comments': typeof AppNestedCommentsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof AppIndexRoute
  '/blog-post': typeof AppBlogPostIndexRoute
  '/crypto-rank-exchange': typeof AppCryptoRankExchangeIndexRoute
  '/employee-validation': typeof AppEmployeeValidationIndexRoute
  '/nested-comments': typeof AppNestedCommentsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_app/_pathlessLayout': typeof AppPathlessLayoutRoute
  '/_app/': typeof AppIndexRoute
  '/_app/blog-post/': typeof AppBlogPostIndexRoute
  '/_app/crypto-rank-exchange/': typeof AppCryptoRankExchangeIndexRoute
  '/_app/employee-validation/': typeof AppEmployeeValidationIndexRoute
  '/_app/nested-comments/': typeof AppNestedCommentsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/blog-post'
    | '/crypto-rank-exchange'
    | '/employee-validation'
    | '/nested-comments'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/blog-post'
    | '/crypto-rank-exchange'
    | '/employee-validation'
    | '/nested-comments'
  id:
    | '__root__'
    | '/_app/_pathlessLayout'
    | '/_app/'
    | '/_app/blog-post/'
    | '/_app/crypto-rank-exchange/'
    | '/_app/employee-validation/'
    | '/_app/nested-comments/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AppPathlessLayoutRoute: typeof AppPathlessLayoutRoute
  AppIndexRoute: typeof AppIndexRoute
  AppBlogPostIndexRoute: typeof AppBlogPostIndexRoute
  AppCryptoRankExchangeIndexRoute: typeof AppCryptoRankExchangeIndexRoute
  AppEmployeeValidationIndexRoute: typeof AppEmployeeValidationIndexRoute
  AppNestedCommentsIndexRoute: typeof AppNestedCommentsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/_pathlessLayout': {
      id: '/_app/_pathlessLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppPathlessLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/nested-comments/': {
      id: '/_app/nested-comments/'
      path: '/nested-comments'
      fullPath: '/nested-comments'
      preLoaderRoute: typeof AppNestedCommentsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/employee-validation/': {
      id: '/_app/employee-validation/'
      path: '/employee-validation'
      fullPath: '/employee-validation'
      preLoaderRoute: typeof AppEmployeeValidationIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/crypto-rank-exchange/': {
      id: '/_app/crypto-rank-exchange/'
      path: '/crypto-rank-exchange'
      fullPath: '/crypto-rank-exchange'
      preLoaderRoute: typeof AppCryptoRankExchangeIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/blog-post/': {
      id: '/_app/blog-post/'
      path: '/blog-post'
      fullPath: '/blog-post'
      preLoaderRoute: typeof AppBlogPostIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  AppPathlessLayoutRoute: AppPathlessLayoutRoute,
  AppIndexRoute: AppIndexRoute,
  AppBlogPostIndexRoute: AppBlogPostIndexRoute,
  AppCryptoRankExchangeIndexRoute: AppCryptoRankExchangeIndexRoute,
  AppEmployeeValidationIndexRoute: AppEmployeeValidationIndexRoute,
  AppNestedCommentsIndexRoute: AppNestedCommentsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
