/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AppIndexRouteImport } from './routes/_app/index'
import { Route as AppPathlessLayoutRouteImport } from './routes/_app/_pathlessLayout'
import { Route as AppSlideshowIndexRouteImport } from './routes/_app/slideshow/index'
import { Route as AppPatientMedicalRecordsIndexRouteImport } from './routes/_app/patient-medical-records/index'
import { Route as AppNestedCommentsIndexRouteImport } from './routes/_app/nested-comments/index'
import { Route as AppItemListManagerIndexRouteImport } from './routes/_app/item-list-manager/index'
import { Route as AppEmployeeValidationIndexRouteImport } from './routes/_app/employee-validation/index'
import { Route as AppCryptoRankExchangeIndexRouteImport } from './routes/_app/crypto-rank-exchange/index'
import { Route as AppContactFormIndexRouteImport } from './routes/_app/contact-form/index'
import { Route as AppCodeReviewFeedbackIndexRouteImport } from './routes/_app/code-review-feedback/index'
import { Route as AppBlogPostIndexRouteImport } from './routes/_app/blog-post/index'
import { Route as AppArticlesSortingIndexRouteImport } from './routes/_app/articles-sorting/index'
import { Route as AppAlgorithmsIndexRouteImport } from './routes/_app/algorithms/index'

const AppIndexRoute = AppIndexRouteImport.update({
  id: '/_app/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppPathlessLayoutRoute = AppPathlessLayoutRouteImport.update({
  id: '/_app/_pathlessLayout',
  getParentRoute: () => rootRouteImport,
} as any)
const AppSlideshowIndexRoute = AppSlideshowIndexRouteImport.update({
  id: '/_app/slideshow/',
  path: '/slideshow/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppPatientMedicalRecordsIndexRoute =
  AppPatientMedicalRecordsIndexRouteImport.update({
    id: '/_app/patient-medical-records/',
    path: '/patient-medical-records/',
    getParentRoute: () => rootRouteImport,
  } as any)
const AppNestedCommentsIndexRoute = AppNestedCommentsIndexRouteImport.update({
  id: '/_app/nested-comments/',
  path: '/nested-comments/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppItemListManagerIndexRoute = AppItemListManagerIndexRouteImport.update({
  id: '/_app/item-list-manager/',
  path: '/item-list-manager/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppEmployeeValidationIndexRoute =
  AppEmployeeValidationIndexRouteImport.update({
    id: '/_app/employee-validation/',
    path: '/employee-validation/',
    getParentRoute: () => rootRouteImport,
  } as any)
const AppCryptoRankExchangeIndexRoute =
  AppCryptoRankExchangeIndexRouteImport.update({
    id: '/_app/crypto-rank-exchange/',
    path: '/crypto-rank-exchange/',
    getParentRoute: () => rootRouteImport,
  } as any)
const AppContactFormIndexRoute = AppContactFormIndexRouteImport.update({
  id: '/_app/contact-form/',
  path: '/contact-form/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppCodeReviewFeedbackIndexRoute =
  AppCodeReviewFeedbackIndexRouteImport.update({
    id: '/_app/code-review-feedback/',
    path: '/code-review-feedback/',
    getParentRoute: () => rootRouteImport,
  } as any)
const AppBlogPostIndexRoute = AppBlogPostIndexRouteImport.update({
  id: '/_app/blog-post/',
  path: '/blog-post/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppArticlesSortingIndexRoute = AppArticlesSortingIndexRouteImport.update({
  id: '/_app/articles-sorting/',
  path: '/articles-sorting/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppAlgorithmsIndexRoute = AppAlgorithmsIndexRouteImport.update({
  id: '/_app/algorithms/',
  path: '/algorithms/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof AppIndexRoute
  '/algorithms': typeof AppAlgorithmsIndexRoute
  '/articles-sorting': typeof AppArticlesSortingIndexRoute
  '/blog-post': typeof AppBlogPostIndexRoute
  '/code-review-feedback': typeof AppCodeReviewFeedbackIndexRoute
  '/contact-form': typeof AppContactFormIndexRoute
  '/crypto-rank-exchange': typeof AppCryptoRankExchangeIndexRoute
  '/employee-validation': typeof AppEmployeeValidationIndexRoute
  '/item-list-manager': typeof AppItemListManagerIndexRoute
  '/nested-comments': typeof AppNestedCommentsIndexRoute
  '/patient-medical-records': typeof AppPatientMedicalRecordsIndexRoute
  '/slideshow': typeof AppSlideshowIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof AppIndexRoute
  '/algorithms': typeof AppAlgorithmsIndexRoute
  '/articles-sorting': typeof AppArticlesSortingIndexRoute
  '/blog-post': typeof AppBlogPostIndexRoute
  '/code-review-feedback': typeof AppCodeReviewFeedbackIndexRoute
  '/contact-form': typeof AppContactFormIndexRoute
  '/crypto-rank-exchange': typeof AppCryptoRankExchangeIndexRoute
  '/employee-validation': typeof AppEmployeeValidationIndexRoute
  '/item-list-manager': typeof AppItemListManagerIndexRoute
  '/nested-comments': typeof AppNestedCommentsIndexRoute
  '/patient-medical-records': typeof AppPatientMedicalRecordsIndexRoute
  '/slideshow': typeof AppSlideshowIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_app/_pathlessLayout': typeof AppPathlessLayoutRoute
  '/_app/': typeof AppIndexRoute
  '/_app/algorithms/': typeof AppAlgorithmsIndexRoute
  '/_app/articles-sorting/': typeof AppArticlesSortingIndexRoute
  '/_app/blog-post/': typeof AppBlogPostIndexRoute
  '/_app/code-review-feedback/': typeof AppCodeReviewFeedbackIndexRoute
  '/_app/contact-form/': typeof AppContactFormIndexRoute
  '/_app/crypto-rank-exchange/': typeof AppCryptoRankExchangeIndexRoute
  '/_app/employee-validation/': typeof AppEmployeeValidationIndexRoute
  '/_app/item-list-manager/': typeof AppItemListManagerIndexRoute
  '/_app/nested-comments/': typeof AppNestedCommentsIndexRoute
  '/_app/patient-medical-records/': typeof AppPatientMedicalRecordsIndexRoute
  '/_app/slideshow/': typeof AppSlideshowIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/algorithms'
    | '/articles-sorting'
    | '/blog-post'
    | '/code-review-feedback'
    | '/contact-form'
    | '/crypto-rank-exchange'
    | '/employee-validation'
    | '/item-list-manager'
    | '/nested-comments'
    | '/patient-medical-records'
    | '/slideshow'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/algorithms'
    | '/articles-sorting'
    | '/blog-post'
    | '/code-review-feedback'
    | '/contact-form'
    | '/crypto-rank-exchange'
    | '/employee-validation'
    | '/item-list-manager'
    | '/nested-comments'
    | '/patient-medical-records'
    | '/slideshow'
  id:
    | '__root__'
    | '/_app/_pathlessLayout'
    | '/_app/'
    | '/_app/algorithms/'
    | '/_app/articles-sorting/'
    | '/_app/blog-post/'
    | '/_app/code-review-feedback/'
    | '/_app/contact-form/'
    | '/_app/crypto-rank-exchange/'
    | '/_app/employee-validation/'
    | '/_app/item-list-manager/'
    | '/_app/nested-comments/'
    | '/_app/patient-medical-records/'
    | '/_app/slideshow/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AppPathlessLayoutRoute: typeof AppPathlessLayoutRoute
  AppIndexRoute: typeof AppIndexRoute
  AppAlgorithmsIndexRoute: typeof AppAlgorithmsIndexRoute
  AppArticlesSortingIndexRoute: typeof AppArticlesSortingIndexRoute
  AppBlogPostIndexRoute: typeof AppBlogPostIndexRoute
  AppCodeReviewFeedbackIndexRoute: typeof AppCodeReviewFeedbackIndexRoute
  AppContactFormIndexRoute: typeof AppContactFormIndexRoute
  AppCryptoRankExchangeIndexRoute: typeof AppCryptoRankExchangeIndexRoute
  AppEmployeeValidationIndexRoute: typeof AppEmployeeValidationIndexRoute
  AppItemListManagerIndexRoute: typeof AppItemListManagerIndexRoute
  AppNestedCommentsIndexRoute: typeof AppNestedCommentsIndexRoute
  AppPatientMedicalRecordsIndexRoute: typeof AppPatientMedicalRecordsIndexRoute
  AppSlideshowIndexRoute: typeof AppSlideshowIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/_pathlessLayout': {
      id: '/_app/_pathlessLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppPathlessLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/slideshow/': {
      id: '/_app/slideshow/'
      path: '/slideshow'
      fullPath: '/slideshow'
      preLoaderRoute: typeof AppSlideshowIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/patient-medical-records/': {
      id: '/_app/patient-medical-records/'
      path: '/patient-medical-records'
      fullPath: '/patient-medical-records'
      preLoaderRoute: typeof AppPatientMedicalRecordsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/nested-comments/': {
      id: '/_app/nested-comments/'
      path: '/nested-comments'
      fullPath: '/nested-comments'
      preLoaderRoute: typeof AppNestedCommentsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/item-list-manager/': {
      id: '/_app/item-list-manager/'
      path: '/item-list-manager'
      fullPath: '/item-list-manager'
      preLoaderRoute: typeof AppItemListManagerIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/employee-validation/': {
      id: '/_app/employee-validation/'
      path: '/employee-validation'
      fullPath: '/employee-validation'
      preLoaderRoute: typeof AppEmployeeValidationIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/crypto-rank-exchange/': {
      id: '/_app/crypto-rank-exchange/'
      path: '/crypto-rank-exchange'
      fullPath: '/crypto-rank-exchange'
      preLoaderRoute: typeof AppCryptoRankExchangeIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/contact-form/': {
      id: '/_app/contact-form/'
      path: '/contact-form'
      fullPath: '/contact-form'
      preLoaderRoute: typeof AppContactFormIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/code-review-feedback/': {
      id: '/_app/code-review-feedback/'
      path: '/code-review-feedback'
      fullPath: '/code-review-feedback'
      preLoaderRoute: typeof AppCodeReviewFeedbackIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/blog-post/': {
      id: '/_app/blog-post/'
      path: '/blog-post'
      fullPath: '/blog-post'
      preLoaderRoute: typeof AppBlogPostIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/articles-sorting/': {
      id: '/_app/articles-sorting/'
      path: '/articles-sorting'
      fullPath: '/articles-sorting'
      preLoaderRoute: typeof AppArticlesSortingIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/algorithms/': {
      id: '/_app/algorithms/'
      path: '/algorithms'
      fullPath: '/algorithms'
      preLoaderRoute: typeof AppAlgorithmsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  AppPathlessLayoutRoute: AppPathlessLayoutRoute,
  AppIndexRoute: AppIndexRoute,
  AppAlgorithmsIndexRoute: AppAlgorithmsIndexRoute,
  AppArticlesSortingIndexRoute: AppArticlesSortingIndexRoute,
  AppBlogPostIndexRoute: AppBlogPostIndexRoute,
  AppCodeReviewFeedbackIndexRoute: AppCodeReviewFeedbackIndexRoute,
  AppContactFormIndexRoute: AppContactFormIndexRoute,
  AppCryptoRankExchangeIndexRoute: AppCryptoRankExchangeIndexRoute,
  AppEmployeeValidationIndexRoute: AppEmployeeValidationIndexRoute,
  AppItemListManagerIndexRoute: AppItemListManagerIndexRoute,
  AppNestedCommentsIndexRoute: AppNestedCommentsIndexRoute,
  AppPatientMedicalRecordsIndexRoute: AppPatientMedicalRecordsIndexRoute,
  AppSlideshowIndexRoute: AppSlideshowIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
